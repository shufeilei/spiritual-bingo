.row
  .col-9
    .row
      .col-8
        %h2.text-primary
          #{@user_possessive} board
          = link_to fa_icon('user'), user_path(@board.user)
      .col-4.text-right
        - unless @board == current_user.board
          = link_to 'my board', board_path(current_user.board)
          |
        = link_to 'scoreboard', boards_path
    .row
      .col-6
        %h4
          Score:
          = @board.score
      .col-6.text-right
        - if @board.user.team
          %h4
            #{@board.user.team.name}:
            = @board.user.team.score
    %table.table.table-bordered
      - Board::CELLS.each_with_index do |row, index_row|
        %tr
          - row.each_with_index do |cell, index_col|
            - the_cell = @cells.where(col: index_col, row: index_row).first
            - finished = the_cell ? 'finished' : ''
            %td.bingo-cell.text-center{ class: finished }
              .instruction{ class: cell[:level], 
                data: { bs_toggle: 'popover', bs_placement: 'top', bs_content: cell[:description] } }
                = cell[:name]
              .sharing
                - if finished == 'finished'
                  = link_to board_cell_path(@board, the_cell), class: 'btn btn-primary btn-sm' do
                    read sharing #{fa_icon 'comment'}
                    %br
                    %small [ #{pluralize(the_cell.commontator_thread.comments.count, 'comment')} ]
                - else
                  = link_to new_board_cell_path(board_id: @board.id, row: index_row, col: index_col), class: 'btn btn-warning btn-sm' do
                    submit
                    =fa_icon 'upload'
              .all-sharing.small.mt-2
                = link_to cells_path(row: index_row, col: index_col) do
                  all sharing [#{Cell.where(col: index_col, row: index_row).count}]
  .col-3
    / = render partial: 'bonus'
    = render partial: 'sharing'

:javascript
  var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
  var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
    return new bootstrap.Popover(popoverTriggerEl, {html: true})
  })